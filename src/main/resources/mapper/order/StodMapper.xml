<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jscd.app.order.StodMapper">
    <!--    주문 내역 조회-->
    <!--    로그인 아이디 / 주문번호 / 주문날짜 / 주문 상태 / 주문 상품 코드 / 주문 상품명 / 주문 상품 금액-->
    <!--    테이블 : member, stod, lstRegist-->
    <select id="selectOrderList" resultType="StodDTO">
        SELECT m.id,
               s.odNo,
               s.regDate,
               s.status,
               s.registCode,
               lr.title,
               lr.lastPrice
        FROM member m
                 JOIN stod s ON m.id = s.id
                 JOIN lstRegist lr ON s.registCode = lr.registCode
        WHERE m.id = #{id};
    </select>


    <!--    구매 상세 내역 조회-->
    <!--    로그인 아이디 / 구매자 이름 / 주문번호 / 주문 상품 코드 / 주문 상품명 / 주문 상품 금액 / 결제 고유 번호 /
            지불 형식 / 승인 카드 번호 / 현금영수증 번호 / 사용자 지불 계좌번호 / 결제 상태 / 카드 타입 / 
            할부 개월 / 결제일 / 결제 시각 / 결제 최종 금액 / 공급자 고유 번호 / 상업자등록번호 / 공급자명 / 
            공급자 휴대폰번호 / 공급자 주소 / 상호명 / 업태 / 종목-->
    <!--    테이블 : member, stod, lstRegist, payhty, companyinfo-->
    <select id="selectOrderDetail" resultType="StodDTO">
        SELECT m.id,
               m.name,
               s.odNo,
               s.registCode,
               s.regDate,
               lr.title,
               lr.lastPrice,
               p.htyNo,
               p.payType,
               p.creditNum,
               p.csrcNum,
               p.userActNum,
               p.status,
               p.cardType,
               p.instlFees,
               p.payDay,
               p.payTime,
               p.lastPrice,
               p.payName,
               p.payBank,
               c.slrNo,
               c.slrNum,
               c.slrName,
               c.slrPhone,
               c.slrAddr,
               c.companyName,
               c.indst,
               c.slrMail,
               c.kind
        FROM member m
                 JOIN stod s ON m.id = s.id
                 JOIN lstRegist lr ON s.registCode = lr.registCode
                 JOIN payhty p ON s.odNo = p.odNo
                 JOIN companyinfo c ON p.slrNo = c.slrNo
        WHERE m.id = #{id} AND s.odNo = #{odNo};
    </select>


    <!-- 사용자 결제 완료 시 주문 이력 테이블에 주문 정보 담기 위함 -->
    <insert id="insertStod" parameterType="StodDTO">
        INSERT INTO stod (odNo, registCode, id, status, lastPrice, payType)
        VALUES (#{odNo}, #{registCode}, #{id}, #{status}, #{lastPrice}, #{payType})
    </insert>

    <!-- 사용자 결제 완료 시 결제 이력 테이블에 주문 정보 담기 위함 -->
    <insert id="insertPayHty" parameterType="StodDTO">
        INSERT INTO payhty (odNo, id, lastPrice, payType, slrNo, slrName, slrNum, slrMail, companyName, indst, kind, slrPhone,
                            creditNum, status, cardType, instlFees, slrAddr, payDay, payTime)
        VALUES (#{odNo}, #{id}, #{lastPrice}, #{payType}, #{slrNo}, #{slrName}, #{slrNum}, #{slrMail}, #{companyName}, #{indst},
                #{kind}, #{slrPhone}, #{creditNum}, #{status}, #{cardType}, #{instlFees}, #{slrAddr}, #{payDay},
                #{payTime})
    </insert>

    <!--    <update id="updateStod" parameterType="StodDTO">-->
    <!--        UPDATE stod-->
    <!--        SET classEnrollNo = #{classEnrollNo}, id = #{id}, status = #{status}, lstPrice = #{lstPrice}, payType = #{payType}-->
    <!--        WHERE odNo = #{odNo}-->
    <!--    </update>-->

    <!--    &lt;!&ndash; 주문 상태만 수정 &ndash;&gt;-->
    <!--    <update id="updateStodStatus" parameterType="StodDTO">-->
    <!--        UPDATE stod-->
    <!--        SET status = #{status}-->
    <!--        WHERE odNo = #{odNo}-->
    <!--    </update>-->


</mapper>